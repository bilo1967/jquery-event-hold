(function($){"use strict";const defaults={initialDelay:400,repeatInterval:200,preventScrollOnTouch:true,acceleration:false,accelerateAfter:10,minRepeatInterval:50,maxIterationsPerHold:50,maxDuration:Infinity};const elementStates=new WeakMap;function handleStart(event){const element=getTargetElement(event);if(!element)return;if($(element).is(':disabled, .disabled, [aria-disabled="true"]'))return;const container=event.delegateTarget||element;const options=normalizeOptions($(container).data("holdOptions")||defaults);if(elementStates.has(element))return;const state={controller:new AbortController,startTime:Date.now(),iteration:0,currentInterval:options.repeatInterval,options:options};elementStates.set(element,state);element.addEventListener("click",e=>{e.stopImmediatePropagation();e.preventDefault()},{capture:true,signal:state.controller.signal,once:true});startHoldSequence(element,state,event,options)}function handleEnd(event){const element=getTargetElement(event);if(!element||!elementStates.has(element))return;const state=elementStates.get(element);const isClick=["mouseup","touchend"].includes(event.type);const isShortPress=Date.now()-state.startTime<state.options.initialDelay;cleanupElementState(element,state,event,isShortPress,isClick)}function startHoldSequence(element,state,originalEvent,options){const $element=$(element);state.initialTimer=setTimeout(()=>{$element.trigger($.Event("holdstart",{originalEvent:originalEvent,startTime:state.startTime}));triggerHoldEvent(element,0,originalEvent);const repeatHandler=()=>{state.holdTime=Date.now()-state.startTime;state.iteration++;if(state.iteration>=options.maxIterationsPerHold||state.holdTime>=options.maxDuration){if(state.iteration>=options.maxIterationsPerHold){console.warn(`Hold iterations limit reached: ${state.iteration} iterations out of ${options.maxIterationsPerHold}`)}else{console.warn(`Hold duration limit reached: duration = ${state.holdTime} ms, time limit ${options.maxDuration}`)}cleanupElementState(element,state,originalEvent,false,false);return}if(options.acceleration!==false&&state.iteration>=options.accelerateAfter){state.currentInterval=Math.max(state.currentInterval*options.acceleration,options.minRepeatInterval)}triggerHoldEvent(element,state.iteration,originalEvent);state.repeatTimer=setTimeout(repeatHandler,state.currentInterval)};state.repeatTimer=setTimeout(repeatHandler,state.currentInterval)},options.initialDelay)}function triggerHoldEvent(element,iteration,originalEvent){const state=elementStates.get(element);$(element).trigger($.Event("holdrepeat",{originalEvent:originalEvent,iteration:iteration,startTime:state.startTime,holdTime:state.holdTime,currentInterval:state.currentInterval,accelerating:state.options.acceleration!==false&&state.iteration>=state.options.accelerateAfter}))}function cleanupElementState(element,state,event,isShortPress=false,isClick=false){clearTimeout(state.initialTimer);clearTimeout(state.repeatTimer);if(isShortPress&&isClick){$(element).trigger("click")}else if(!isShortPress){const duration=Date.now()-state.startTime;$(element).trigger($.Event("holdstop",{originalEvent:event,startTime:state.startTime,duration:duration,iterations:state.iteration}))}elementStates.delete(element)}function abortControllerWithDelay(controller,now=false){if(controller?.signal?.aborted)return;if(now){controller?.abort()}else{setTimeout(()=>controller?.abort(),0)}}function getTargetElement(event){const container=event.delegateTarget||event.currentTarget;const selectors=$(container).data("holdSelectors")||[];for(const selector of selectors){const target=$(event.target).closest(selector)[0];if(target)return target}return event.currentTarget}function normalizeOptions(options){const id=Math.max(0,parseInt(options.initialDelay)||defaults.initialDelay);const ri=Math.max(50,parseInt(options.repeatInterval)||defaults.repeatInterval);return{initialDelay:id,repeatInterval:ri,preventScrollOnTouch:!!options.preventScrollOnTouch,acceleration:typeof options.acceleration==="number"?Math.min(1,Math.max(0,options.acceleration)):false,accelerateAfter:Math.max(1,parseInt(options.accelerateAfter)||defaults.accelerateAfter),minRepeatInterval:Math.max(10,parseInt(options.minRepeatInterval)||defaults.minRepeatInterval),maxIterationsPerHold:Math.max(0,parseInt(options.maxIterationsPerHold))||Infinity,maxDuration:Math.max(id+ri,parseInt(options.maxDuration))||Infinity}}$.event.special.holdrepeat={setup:function(data){},teardown:function(){},add:function(handleObj){const options=normalizeOptions($.extend({},defaults,handleObj.data));const selector=handleObj.selector;const container=this;if(selector){const selectors=$(container).data("holdSelectors")||[];if(!selectors.includes(selector)){$(container).data("holdSelectors",[...selectors,selector])}}const eventNamespace=selector?`.hold_${selector.replace(/[^a-z0-9]/gi,"")}`:"";$(container).data("holdOptions",options).on(`mousedown${eventNamespace} touchstart${eventNamespace}`,selector||null,handleStart).on(`mouseup${eventNamespace} mouseleave${eventNamespace} touchend${eventNamespace} touchcancel${eventNamespace}`,selector||null,handleEnd)},remove:function(handleObj){const selector=handleObj.selector;const container=this;const selectors=$(container).data("holdSelectors")||[];$(container).data("holdSelectors",selectors.filter(s=>s!==selector));const eventNamespace=`.hold_${selector.replace(/[^a-z0-9]/g,"")}`;$(container).off(`mousedown${eventNamespace} touchstart${eventNamespace}`).off(`mouseup${eventNamespace} mouseleave${eventNamespace} touchend${eventNamespace} touchcancel${eventNamespace}`)}}})(jQuery);
